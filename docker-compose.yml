services:
  odoo17:
    image: odoo:17.0
    container_name: odoo17
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: app.mukhtar.so
      LETSENCRYPT_HOST: app.mukhtar.so
      LETSENCRYPT_EMAIL: youremail@example.com
    volumes:
      - odoo-odoo17-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./addons:/mnt/extra-addons
    networks:
      - app-network

  db:
    image: postgres:16
    container_name: odoo-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - odoo-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network

  letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: letsencrypt
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy
      ACME_CA_URI: https://acme-v02.api.letsencrypt.org/directory
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    networks:
      - app-network

volumes:
  odoo-odoo17-data:
  odoo-db-data:

networks:
  app-network:
    driver: bridge
